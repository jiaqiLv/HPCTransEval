void default_function_kernel(float* compute, float* data, float* grid);
void default_function_kernel(float* compute, float* data, float* grid) {
  #pragma omp parallel for
  for (int32_t n_c_fused = 0; n_c_fused < 16; ++n_c_fused) {
    for (int32_t h = 0; h < 16; ++h) {
      for (int32_t w_inner = 0; w_inner < 16; ++w_inner) {
        compute[(((n_c_fused * 256) + (h * 16)) + w_inner)] = ((((((((((0 <= ((int32_t)floorf((((grid[(((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner) + 256)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f)))) && (0 <= ((int32_t)floorf((((grid[((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f))))) && (((int32_t)floorf((((grid[(((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner) + 256)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f))) < 8)) && (((int32_t)floorf((((grid[((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f))) < 8)) ? data[(((n_c_fused * 64) + (((int32_t)floorf((((grid[(((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner) + 256)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f))) * 8)) + ((int32_t)floorf((((grid[((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f))))] : 0.000000e+00f) * (1.000000e+00f - ((((grid[(((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner) + 256)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f) - ((float)((int32_t)floorf((((grid[(((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner) + 256)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f))))))) * (1.000000e+00f - ((((grid[((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f) - ((float)((int32_t)floorf((((grid[((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f))))))) + (((((((0 <= ((int32_t)floorf((((grid[(((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner) + 256)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f)))) && (-1 <= ((int32_t)floorf((((grid[((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f))))) && (((int32_t)floorf((((grid[(((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner) + 256)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f))) < 8)) && (((int32_t)floorf((((grid[((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f))) < 7)) ? data[((((n_c_fused * 64) + (((int32_t)floorf((((grid[(((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner) + 256)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f))) * 8)) + ((int32_t)floorf((((grid[((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f)))) + 1)] : 0.000000e+00f) * (1.000000e+00f - ((((grid[(((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner) + 256)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f) - ((float)((int32_t)floorf((((grid[(((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner) + 256)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f))))))) * ((((grid[((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f) - ((float)((int32_t)floorf((((grid[((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f))))))) + (((((((-1 <= ((int32_t)floorf((((grid[(((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner) + 256)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f)))) && (0 <= ((int32_t)floorf((((grid[((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f))))) && (((int32_t)floorf((((grid[(((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner) + 256)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f))) < 7)) && (((int32_t)floorf((((grid[((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f))) < 8)) ? data[((((n_c_fused * 64) + (((int32_t)floorf((((grid[(((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner) + 256)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f))) * 8)) + ((int32_t)floorf((((grid[((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f)))) + 8)] : 0.000000e+00f) * ((((grid[(((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner) + 256)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f) - ((float)((int32_t)floorf((((grid[(((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner) + 256)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f)))))) * (1.000000e+00f - ((((grid[((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f) - ((float)((int32_t)floorf((((grid[((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f)))))))) + (((((((-1 <= ((int32_t)floorf((((grid[(((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner) + 256)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f)))) && (-1 <= ((int32_t)floorf((((grid[((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f))))) && (((int32_t)floorf((((grid[(((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner) + 256)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f))) < 7)) && (((int32_t)floorf((((grid[((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f))) < 7)) ? data[((((n_c_fused * 64) + (((int32_t)floorf((((grid[(((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner) + 256)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f))) * 8)) + ((int32_t)floorf((((grid[((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f)))) + 9)] : 0.000000e+00f) * ((((grid[(((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner) + 256)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f) - ((float)((int32_t)floorf((((grid[(((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner) + 256)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f)))))) * ((((grid[((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f) - ((float)((int32_t)floorf((((grid[((((n_c_fused >> 2) * 512) + (h * 16)) + w_inner)] + 1.000000e+00f) * 7.000000e+00f) * 5.000000e-01f)))))));
      }
    }
  }
}

