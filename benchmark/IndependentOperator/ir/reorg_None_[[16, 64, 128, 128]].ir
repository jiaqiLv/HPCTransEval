# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16, 64, 128, 128), "float32"), T_reshape: T.Buffer((16, 256, 64, 64), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        tensor = T.allocate([16777216], "float32", "global")
        tensor_1 = T.Buffer((16777216,), data=tensor)
        for ax0, ax1, ax2, ax3 in T.grid(16, 64, 128, 128):
            A_1 = T.Buffer((16777216,), data=A.data)
            tensor_1[ax0 * 1048576 + ax1 * 16384 + ax2 * 128 + ax3] = A_1[ax0 * 4194304 + ax1 % 16 * 65536 + ax2 * 512 + ax1 // 32 * 256 + ax3 * 2 + ax1 % 32 // 16]
        for ax0, ax1, ax2, ax3 in T.grid(16, 256, 64, 64):
            cse_var_1: T.int32 = ax0 * 1048576 + ax1 * 4096 + ax2 * 64 + ax3
            T_reshape_1 = T.Buffer((16777216,), data=T_reshape.data)
            T_reshape_1[cse_var_1] = tensor_1[cse_var_1]