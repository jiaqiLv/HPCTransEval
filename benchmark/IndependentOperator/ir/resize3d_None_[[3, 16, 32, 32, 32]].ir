# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((3, 16, 32, 32, 32), "float32"), resize: T.Buffer((3, 16, 10, 10, 10), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for i0_i1_fused_i2_fused in T.parallel(480):
            for i3, i4_inner in T.grid(10, 10):
                cse_var_4: T.int32 = i0_i1_fused_i2_fused // 10 * 32768
                cse_var_3: T.float32 = (T.Cast("float32", i4_inner) + T.float32(0.5)) * T.float32(3.2000000476837158) - T.float32(0.5)
                cse_var_2: T.float32 = (T.Cast("float32", i3) + T.float32(0.5)) * T.float32(3.2000000476837158) - T.float32(0.5)
                cse_var_1: T.float32 = (T.Cast("float32", i0_i1_fused_i2_fused % 10) + T.float32(0.5)) * T.float32(3.2000000476837158) - T.float32(0.5)
                resize_1 = T.Buffer((48000,), data=resize.data)
                A_1 = T.Buffer((1572864,), data=A.data)
                resize_1[i0_i1_fused_i2_fused * 100 + i3 * 10 + i4_inner] = ((A_1[cse_var_4 + T.max(T.min(T.Cast("int32", T.floor(cse_var_1)), 31), 0) * 1024 + T.max(T.min(T.Cast("int32", T.floor(cse_var_2)), 31), 0) * 32 + T.max(T.min(T.Cast("int32", T.floor(cse_var_3)), 31), 0)] * (T.float32(1) - (cse_var_3 - T.Cast("float32", T.Cast("int32", T.floor(cse_var_3))))) + A_1[cse_var_4 + T.max(T.min(T.Cast("int32", T.floor(cse_var_1)), 31), 0) * 1024 + T.max(T.min(T.Cast("int32", T.floor(cse_var_2)), 31), 0) * 32 + T.max(T.min(T.Cast("int32", T.floor(cse_var_3)) + 1, 31), 0)] * (cse_var_3 - T.Cast("float32", T.Cast("int32", T.floor(cse_var_3))))) * (T.float32(1) - (cse_var_2 - T.Cast("float32", T.Cast("int32", T.floor(cse_var_2))))) + (A_1[cse_var_4 + T.max(T.min(T.Cast("int32", T.floor(cse_var_1)), 31), 0) * 1024 + T.max(T.min(T.Cast("int32", T.floor(cse_var_2)) + 1, 31), 0) * 32 + T.max(T.min(T.Cast("int32", T.floor(cse_var_3)), 31), 0)] * (T.float32(1) - (cse_var_3 - T.Cast("float32", T.Cast("int32", T.floor(cse_var_3))))) + A_1[cse_var_4 + T.max(T.min(T.Cast("int32", T.floor(cse_var_1)), 31), 0) * 1024 + T.max(T.min(T.Cast("int32", T.floor(cse_var_2)) + 1, 31), 0) * 32 + T.max(T.min(T.Cast("int32", T.floor(cse_var_3)) + 1, 31), 0)] * (cse_var_3 - T.Cast("float32", T.Cast("int32", T.floor(cse_var_3))))) * (cse_var_2 - T.Cast("float32", T.Cast("int32", T.floor(cse_var_2))))) * (T.float32(1) - (cse_var_1 - T.Cast("float32", T.Cast("int32", T.floor(cse_var_1))))) + ((A_1[cse_var_4 + T.max(T.min(T.Cast("int32", T.floor(cse_var_1)) + 1, 31), 0) * 1024 + T.max(T.min(T.Cast("int32", T.floor(cse_var_2)), 31), 0) * 32 + T.max(T.min(T.Cast("int32", T.floor(cse_var_3)), 31), 0)] * (T.float32(1) - (cse_var_3 - T.Cast("float32", T.Cast("int32", T.floor(cse_var_3))))) + A_1[cse_var_4 + T.max(T.min(T.Cast("int32", T.floor(cse_var_1)) + 1, 31), 0) * 1024 + T.max(T.min(T.Cast("int32", T.floor(cse_var_2)), 31), 0) * 32 + T.max(T.min(T.Cast("int32", T.floor(cse_var_3)) + 1, 31), 0)] * (cse_var_3 - T.Cast("float32", T.Cast("int32", T.floor(cse_var_3))))) * (T.float32(1) - (cse_var_2 - T.Cast("float32", T.Cast("int32", T.floor(cse_var_2))))) + (A_1[cse_var_4 + T.max(T.min(T.Cast("int32", T.floor(cse_var_1)) + 1, 31), 0) * 1024 + T.max(T.min(T.Cast("int32", T.floor(cse_var_2)) + 1, 31), 0) * 32 + T.max(T.min(T.Cast("int32", T.floor(cse_var_3)), 31), 0)] * (T.float32(1) - (cse_var_3 - T.Cast("float32", T.Cast("int32", T.floor(cse_var_3))))) + A_1[cse_var_4 + T.max(T.min(T.Cast("int32", T.floor(cse_var_1)) + 1, 31), 0) * 1024 + T.max(T.min(T.Cast("int32", T.floor(cse_var_2)) + 1, 31), 0) * 32 + T.max(T.min(T.Cast("int32", T.floor(cse_var_3)) + 1, 31), 0)] * (cse_var_3 - T.Cast("float32", T.Cast("int32", T.floor(cse_var_3))))) * (cse_var_2 - T.Cast("float32", T.Cast("int32", T.floor(cse_var_2))))) * (cse_var_1 - T.Cast("float32", T.Cast("int32", T.floor(cse_var_1))))