# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((2, 1560), "float32"), indices: T.Buffer((1, 3), "int32"), updates: T.Buffer((3, 1560), "float32"), scatter_nd_generic: T.Buffer((2, 1560), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        T.attr(0, "extern_scope", 0)
        scatter_nd_generic_1 = T.Buffer((3120,), data=scatter_nd_generic.data)
        for i in range(3120):
            data_1 = T.Buffer((3120,), data=data.data)
            scatter_nd_generic_1[i] = data_1[i]
        for j in range(3):
            for k in T.parallel(1560):
                indices_1 = T.Buffer((3,), "int32", data=indices.data)
                updates_1 = T.Buffer((4680,), data=updates.data)
                scatter_nd_generic_1[indices_1[j] * 1560 + k] = scatter_nd_generic_1[indices_1[j] * 1560 + k] + updates_1[j * 1560 + k]