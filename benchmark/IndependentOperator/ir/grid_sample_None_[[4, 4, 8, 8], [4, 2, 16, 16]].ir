# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(data: T.Buffer((4, 4, 8, 8), "float32"), grid: T.Buffer((4, 2, 16, 16), "float32"), compute: T.Buffer((4, 4, 16, 16), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for n_c_fused in T.parallel(16):
            for h, w_inner in T.grid(16, 16):
                cse_var_4: T.int32 = h * 16
                cse_var_3: T.int32 = n_c_fused * 64
                cse_var_2: T.int32 = n_c_fused // 4 * 512 + cse_var_4 + w_inner
                cse_var_1: T.int32 = cse_var_2 + 256
                compute_1 = T.Buffer((4096,), data=compute.data)
                grid_1 = T.Buffer((2048,), data=grid.data)
                data_1 = T.Buffer((1024,), data=data.data)
                compute_1[n_c_fused * 256 + cse_var_4 + w_inner] = T.if_then_else(0 <= T.Cast("int32", T.floor((grid_1[cse_var_1] + T.float32(1)) * T.float32(7) * T.float32(0.5))) and 0 <= T.Cast("int32", T.floor((grid_1[cse_var_2] + T.float32(1)) * T.float32(7) * T.float32(0.5))) and T.Cast("int32", T.floor((grid_1[cse_var_1] + T.float32(1)) * T.float32(7) * T.float32(0.5))) < 8 and T.Cast("int32", T.floor((grid_1[cse_var_2] + T.float32(1)) * T.float32(7) * T.float32(0.5))) < 8, data_1[cse_var_3 + T.Cast("int32", T.floor((grid_1[cse_var_1] + T.float32(1)) * T.float32(7) * T.float32(0.5))) * 8 + T.Cast("int32", T.floor((grid_1[cse_var_2] + T.float32(1)) * T.float32(7) * T.float32(0.5)))], T.float32(0)) * (T.float32(1) - ((grid_1[cse_var_1] + T.float32(1)) * T.float32(7) * T.float32(0.5) - T.Cast("float32", T.Cast("int32", T.floor((grid_1[cse_var_1] + T.float32(1)) * T.float32(7) * T.float32(0.5)))))) * (T.float32(1) - ((grid_1[cse_var_2] + T.float32(1)) * T.float32(7) * T.float32(0.5) - T.Cast("float32", T.Cast("int32", T.floor((grid_1[cse_var_2] + T.float32(1)) * T.float32(7) * T.float32(0.5)))))) + T.if_then_else(0 <= T.Cast("int32", T.floor((grid_1[cse_var_1] + T.float32(1)) * T.float32(7) * T.float32(0.5))) and -1 <= T.Cast("int32", T.floor((grid_1[cse_var_2] + T.float32(1)) * T.float32(7) * T.float32(0.5))) and T.Cast("int32", T.floor((grid_1[cse_var_1] + T.float32(1)) * T.float32(7) * T.float32(0.5))) < 8 and T.Cast("int32", T.floor((grid_1[cse_var_2] + T.float32(1)) * T.float32(7) * T.float32(0.5))) < 7, data_1[cse_var_3 + T.Cast("int32", T.floor((grid_1[cse_var_1] + T.float32(1)) * T.float32(7) * T.float32(0.5))) * 8 + T.Cast("int32", T.floor((grid_1[cse_var_2] + T.float32(1)) * T.float32(7) * T.float32(0.5))) + 1], T.float32(0)) * (T.float32(1) - ((grid_1[cse_var_1] + T.float32(1)) * T.float32(7) * T.float32(0.5) - T.Cast("float32", T.Cast("int32", T.floor((grid_1[cse_var_1] + T.float32(1)) * T.float32(7) * T.float32(0.5)))))) * ((grid_1[cse_var_2] + T.float32(1)) * T.float32(7) * T.float32(0.5) - T.Cast("float32", T.Cast("int32", T.floor((grid_1[cse_var_2] + T.float32(1)) * T.float32(7) * T.float32(0.5))))) + T.if_then_else(-1 <= T.Cast("int32", T.floor((grid_1[cse_var_1] + T.float32(1)) * T.float32(7) * T.float32(0.5))) and 0 <= T.Cast("int32", T.floor((grid_1[cse_var_2] + T.float32(1)) * T.float32(7) * T.float32(0.5))) and T.Cast("int32", T.floor((grid_1[cse_var_1] + T.float32(1)) * T.float32(7) * T.float32(0.5))) < 7 and T.Cast("int32", T.floor((grid_1[cse_var_2] + T.float32(1)) * T.float32(7) * T.float32(0.5))) < 8, data_1[cse_var_3 + T.Cast("int32", T.floor((grid_1[cse_var_1] + T.float32(1)) * T.float32(7) * T.float32(0.5))) * 8 + T.Cast("int32", T.floor((grid_1[cse_var_2] + T.float32(1)) * T.float32(7) * T.float32(0.5))) + 8], T.float32(0)) * ((grid_1[cse_var_1] + T.float32(1)) * T.float32(7) * T.float32(0.5) - T.Cast("float32", T.Cast("int32", T.floor((grid_1[cse_var_1] + T.float32(1)) * T.float32(7) * T.float32(0.5))))) * (T.float32(1) - ((grid_1[cse_var_2] + T.float32(1)) * T.float32(7) * T.float32(0.5) - T.Cast("float32", T.Cast("int32", T.floor((grid_1[cse_var_2] + T.float32(1)) * T.float32(7) * T.float32(0.5)))))) + T.if_then_else(-1 <= T.Cast("int32", T.floor((grid_1[cse_var_1] + T.float32(1)) * T.float32(7) * T.float32(0.5))) and -1 <= T.Cast("int32", T.floor((grid_1[cse_var_2] + T.float32(1)) * T.float32(7) * T.float32(0.5))) and T.Cast("int32", T.floor((grid_1[cse_var_1] + T.float32(1)) * T.float32(7) * T.float32(0.5))) < 7 and T.Cast("int32", T.floor((grid_1[cse_var_2] + T.float32(1)) * T.float32(7) * T.float32(0.5))) < 7, data_1[cse_var_3 + T.Cast("int32", T.floor((grid_1[cse_var_1] + T.float32(1)) * T.float32(7) * T.float32(0.5))) * 8 + T.Cast("int32", T.floor((grid_1[cse_var_2] + T.float32(1)) * T.float32(7) * T.float32(0.5))) + 9], T.float32(0)) * ((grid_1[cse_var_1] + T.float32(1)) * T.float32(7) * T.float32(0.5) - T.Cast("float32", T.Cast("int32", T.floor((grid_1[cse_var_1] + T.float32(1)) * T.float32(7) * T.float32(0.5))))) * ((grid_1[cse_var_2] + T.float32(1)) * T.float32(7) * T.float32(0.5) - T.Cast("float32", T.Cast("int32", T.floor((grid_1[cse_var_2] + T.float32(1)) * T.float32(7) * T.float32(0.5)))))