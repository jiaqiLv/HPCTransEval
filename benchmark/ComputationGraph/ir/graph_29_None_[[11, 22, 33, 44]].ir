# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(ph: T.Buffer((11, 22, 33, 44), "float32"), T_transpose: T.Buffer((10, 10, 10, 10), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for ax0_ax1_fused in T.parallel(100):
            for ax2, ax3_inner in T.grid(10, 10):
                T_transpose_1 = T.Buffer((10000,), data=T_transpose.data)
                ph_1 = T.Buffer((351384,), data=ph.data)
                T_transpose_1[ax0_ax1_fused * 100 + ax2 * 10 + ax3_inner] = T.tanh(T.max(T.min(T.log2(ph_1[ax3_inner * 31944 + ax0_ax1_fused // 10 * 1452 + ax2 * 44 + ax0_ax1_fused % 10 + 16973]), T.float32(10)), T.float32(0)))