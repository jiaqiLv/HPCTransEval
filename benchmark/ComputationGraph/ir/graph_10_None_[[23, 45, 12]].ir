# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(ph: T.Buffer((23, 45, 12), "float32"), T_transpose: T.Buffer((3, 69, 20), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "tir.noalias": T.bool(True)})
        for ax0_ax1_fused in T.parallel(207):
            for ax2_outer, ax2_inner in T.grid(2, 16):
                if T.likely(ax2_outer * 4 + ax2_inner // 4 < 5):
                    T_transpose_1 = T.Buffer((4140,), data=T_transpose.data)
                    ph_1 = T.Buffer((12420,), data=ph.data)
                    cse_var_1: T.int32 = ax0_ax1_fused % 69 * 60 + ax2_outer * 48 + ax2_inner * 3 + ax0_ax1_fused // 69
                    T_transpose_1[ax0_ax1_fused * 20 + ax2_outer * 16 + ax2_inner] = T.max(T.float32(-9), T.min(T.float32(9), ph_1[cse_var_1])) * (T.max(T.float32(-9), T.min(T.float32(9), ph_1[cse_var_1])) * T.max(T.float32(-9), T.min(T.float32(9), ph_1[cse_var_1])) * (T.max(T.float32(-9), T.min(T.float32(9), ph_1[cse_var_1])) * T.max(T.float32(-9), T.min(T.float32(9), ph_1[cse_var_1])) * (T.max(T.float32(-9), T.min(T.float32(9), ph_1[cse_var_1])) * T.max(T.float32(-9), T.min(T.float32(9), ph_1[cse_var_1])) * (T.max(T.float32(-9), T.min(T.float32(9), ph_1[cse_var_1])) * T.max(T.float32(-9), T.min(T.float32(9), ph_1[cse_var_1])) * (T.max(T.float32(-9), T.min(T.float32(9), ph_1[cse_var_1])) * T.max(T.float32(-9), T.min(T.float32(9), ph_1[cse_var_1])) * (T.max(T.float32(-9), T.min(T.float32(9), ph_1[cse_var_1])) * T.max(T.float32(-9), T.min(T.float32(9), ph_1[cse_var_1])) * T.float32(-2.76076847742355e-16) + T.float32(2.0001879048247699e-13)) + T.float32(-8.60467152213735e-11)) + T.float32(5.1222970903711401e-08)) + T.float32(1.4857223571797901e-05)) + T.float32(0.00063726192887543596)) + T.float32(0.0048935245589178597)) / (T.max(T.float32(-9), T.min(T.float32(9), ph_1[cse_var_1])) * T.max(T.float32(-9), T.min(T.float32(9), ph_1[cse_var_1])) * (T.max(T.float32(-9), T.min(T.float32(9), ph_1[cse_var_1])) * T.max(T.float32(-9), T.min(T.float32(9), ph_1[cse_var_1])) * (T.max(T.float32(-9), T.min(T.float32(9), ph_1[cse_var_1])) * T.max(T.float32(-9), T.min(T.float32(9), ph_1[cse_var_1])) * T.float32(1.1982583946670199e-06) + T.float32(0.000118534705686654)) + T.float32(0.0022684346324390002)) + T.float32(0.0048935251855438504))